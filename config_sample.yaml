recorder:
  ## Note: All IDs must contain only valid characters.
  ## Otherwise, issues may arise with NATS (https://docs.nats.io/nats-concepts/subjects#characters-allowed-and-recommended-for-subject-names)
  ## Permitted characters: (a - z), (A - Z), (0 - 9), hyphen (-), and underscore (_)
  id: node_01
  # Avoid processing more than 10 concurrent recordings on a single server.
  # It is recommended to use multiple servers if higher capacity is necessary.
  max_limit: 10
  # If enabled, debug logs will be displayed in the terminal.
  debug: false
  # Enable this to post-process the raw MP4 recording for improved quality.
  # Note: This increases CPU usage and processing time.
  post_mp4_convert: true
  # Specify a custom Chrome binary path if required.
  custom_chrome_path: ""
  # Optional: Set the dimensions of the virtual recording window.
  # The output video will match this resolution.
  width: 1920
  height: 1080
  # Optional: Adjust the DPI of the xvfb virtual window.
  # Higher DPI can enhance image clarity but may affect performance and compatibility.
  xvfb_dpi: 96
  copy_to_path:
    # The plugNmeet server must have access to this path for users to download recordings.
    # This can be an NFS or other network-accessible path.
    main_path: "../recording_files"
    # Optional: Specify a subdirectory for this recorder instance.
    # This path must reside within main_path and will be stored in the database.
    sub_path: "node_01"
  # Optional: Define post-processing scripts to further process recordings.
  # Example script available at post_processing_scripts/example.sh
  # Ensure scripts have executable permissions (e.g., chmod +x).
  #post_processing_scripts:
  #  - "./post_processing_scripts/example.sh"

log_settings:
  log_file: "./logs/recorder.log"
  # Maximum log file size in megabytes.
  maxsize: 20
  # Maximum number of backup log files to retain.
  maxbackups: 4
  # Maximum age (in days) before log rotation stops.
  maxage: 2
  # Log levels: info, warn, error, fatal, debug, or panic.
  log_level: "info"

# Define custom FFmpeg options here.
ffmpeg_settings:
  recording:
    # Options to apply before the input (-i) parameter.
    pre_input: "-loglevel error -thread_queue_size 512 -draw_mouse 0"
    # Options to apply after the input (-i) parameter.
    post_input: "-c:v libx264 -x264-params keyint=120:scenecut=0 -preset veryfast -crf 23 -c:a aac -af highpass=f=200,lowpass=f=4000,afftdn -async 1 -movflags frag_keyframe+empty_moov+default_base_moof -flush_packets 1 -tune zerolatency -y"
  post_recording:
    pre_input: "-loglevel error"
    post_input: "-preset veryfast -movflags faststart -y"
  rtmp:
    pre_input: "-loglevel error -draw_mouse 0"
    post_input: "-c:v libx264 -pix_fmt yuv420p -x264-params keyint=120:scenecut=0 -b:v 2500k -video_size 1920x1080 -c:a aac -b:a 128k -ar 44100 -af highpass=f=200,lowpass=f=4000,afftdn -preset veryfast -crf 23 -async 1 -movflags frag_keyframe+empty_moov+default_base_moof -bufsize 5000k -flush_packets 1 -tune zerolatency -f flv"

plugNmeet_info:
  # Example: http://localhost:8080
  host: PLUG_N_MEET_SERVER_DOMAIN
  api_key: PLUG_N_MEET_API_KEY
  api_secret: PLUG_N_MEET_SECRET
  # Optional: Use join_host if the plugNmeet client is hosted separately.
  # For non-localhost servers, use an HTTPS URL, or it will not function correctly.
  # Format: https://PLUG_N_MEET_SERVER_DOMAIN/?access_token=
  # join_host: "http://localhost:3000/?access_token="

nats_info:
  nats_urls:
    - "nats://127.0.0.1:4222"
  num_replicas: 1 # Acceptable values: 1, 3, or 5
  recorder:
    recorder_channel: "recorderChannel"
    recorder_info_kv: "pnm-recorderInfo"

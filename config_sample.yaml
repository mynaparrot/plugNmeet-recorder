recorder:
  id: node_01
  max_limit: 10
  # you can set it true, if you want to get MP4 as output
  # this will require more times & CPU for encoding
  post_mp4_convert: true
  # use it if you want to use custom chrome
  custom_chrome_path: ""
  copy_to_path:
    # plugnmeet-server should have access this path otherwise user can't download recordings.
    # this path can be NSF or other network path too but make sure nodejs has permission
    # to write this path.
    main_path: "../recording_files"
    # this is optional. If you set this path then it will be included with recording
    # and store in database. This path should be inside main_path. Sometime user want to
    # use specific recording directory for this particular recorder.
    sub_path: "node_01"
plugNmeet_info:
  # http://localhost:8080
  host: PLUG_N_MEET_SERVER_DOMAIN
  api_key: PLUG_N_MEET_API_KEY
  api_secret: PLUG_N_MEET_SECRET
  # join_host is optional. Use it if plugNmeet-client installed in different place
  # if it's live server then should be https link otherwise won't work.
  # format: https://PLUG_N_MEET_SERVER_DOMAIN/?access_token=
  # join_host: "http://localhost:3000/?access_token="
websocket_server:
  host: "ws://localhost"
  port: 4000
  # openssl rand -hex 10
  # OR
  # cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1
  auth_token: WEBSOCKET_AUTH_TOKEN
  # the number of CPU ffmpeg will use during conversion. Default: 4
  ffmpeg_threads: 4
redis_info:
  host: localhost
  port: 6379
  username: ""
  password: ""
  db: 0
#  use_tls: false
#  To use sentinel remove the host key above and add the following
#  sentinel_master_name: plugnmeet
#  sentinel_addresses:
#    - redis-sentinel-host-1:26379
#    - redis-sentinel-host-2:26379
#    - redis-sentinel-host-3:26379
#  If you use a different set of credentials for sentinel add
#  sentinel_username: user
#  sentinel_password: pass
